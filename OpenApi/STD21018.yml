openapi: 3.0.1
info:
  title: STD21018 API
  description: 'Global description of my API'
  version: 1.0.0
servers:
 - url: https://STD21018.com
tags: 
 - name: Students
 - name: Courses
paths:
 /students:
    get:
      tags:
        - Students
      operationId: getStudents
      summary: Get all students
      description: Get all students with details
      responses:
        200: 
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
    post: 
      tags:
        - Students
      operationId: createStudent
      summary : Create new student
      description: Create new student
      requestBody:
        description: Student to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
        required: true
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: Bad request 
 /student/{id}:
    get:
      tags:
        - Students
      operationId: getStudentId
      summary: Get informations about a specific student
      description: Get informations of a specific student
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            example: 2
          required: true
      responses:
        200:
          description : Details of a student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentId'
        400:
          description: Bad request
    delete:
      tags:
        - Students
      operationId: deleteStudent
      summary: Delete a student
      description : Delete the student having the entered id
      parameters:
        - name: id
          in : path
          schema:
            type: integer
            example: 2
          required: true
      responses:
        200:
          description: Student deleted successfully
        400:
          description: Bad request
 /courses:
    get:
      tags:
        - Courses
      operationId: getCourses
      summary: Get all courses
      description: Get all courses with details
      responses:
        200:
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad request
    post:
      tags:
        - Courses
      operationId: CreateCourse
      summary: Create new courses
      description: Create new course
      requestBody:
        description: Course to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourse'
        required: true
      responses:
        200:
          description: List of courses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        400:
          description: Bad request
 /courses/{id}:
    get:
      tags:
        - Courses
      operationId: getCourseId
      summary: Get informations about a specific course
      description: Informations about a course
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            example: 2
          required: true
      responses:
        200:
          description: details about a course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseId'
        400:
          description: Bad request
    delete:
      tags:
        - Courses
      operationId: deleteCourse
      summary: Delete a course
      description: Delete the course having the entered id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            example: 2
          required: true
      responses:
        200:
          description: Course deleted successfully
        400:
          description: Bad request
components:
  schemas:
    CreateStudent:
      type: object
      properties:
        name:
          type: string
          example: "Rakoto"
        birth_date:
          type: string
          format: date
          example: "2022-01-01"
    Student:
      allOf:
        - $ref: '#/components/schemas/CreateStudent'
      type: object
      properties:
        id:
          type: integer
          example: 10
    StudentId:
      allOf:
        - $ref: '#/components/schemas/CreateStudent'
      type: object
      properties:
        id:
          type: integer
          example: 2
    CreateCourse:
      type: object
      properties:
        code: 
          type: string
          example: "PROG1"
        name:
          type: string
          example: "Algorithmique"
        Teacher: 
          type: string
          example: "Rabe"
        Created_Date:
          type: string
          format: date
    Course:
      properties:
        id:
          type: integer
          example: 10
      allOf:
      - $ref: '#/components/schemas/CreateCourse'
    CourseId: 
      allOf:
        - $ref: '#components/schemas/CreateCourse'
      properties:
        id:
          type: integer
          example: 2