openapi: 3.0.1
info:
  title: Cinéma STD21018
  description: 'API de gestion d''une salle de cinéma'
  version: 1.0.0
servers:
  - url: https://cinema.STD21018.com
tags:
  - name: Films
  - name : Categories
paths:
  /films:
    get:
      tags:
        - Films
      summary: This week's films
      description: List of this week's films
      operationId: listFilms
      responses:
        200:
          description: films to be played this week 
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: 
                  '#/components/schemas/projection'
        400:
          description: Badrequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    post:
      tags:
        - Films
      summary: Add a new film 
      description: Add a film to the week's playlist films
      operationId: addFilm
      requestBody:
        description: details about the film
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/createFilm'
        required: true
      responses:
        200:
          description: Film added to the queue
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projection'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    put:
      tags:
        - Films
      summary: Change film
      description: Change a film
      operationId: putFilm
      requestBody:
        description: The new films
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/createFilm'
      responses:
        200:
          description: Film(s) updated
        400:
          description: Badrequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    delete:
      tags:
        - Films
      summary: delete film(s)
      description: delete film(s) from the list
      operationId: deletefilm
      requestBody:
        description: film(s) to be deleted
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/deleteFilm'
      responses:
        200:
          description: film(s) deleted
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
  /films/{id}:
    get:
      tags:
        - Films
      summary: Get informations of a film
      description: Get informations about a specific film
      operationId: Getfilm
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            example: 2
          required: true
      responses:
        200:
          description: Informations about the film with the entered id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projection'
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    patch:
      tags:
        - Films
      summary: Changes details of a film
      description: |
            Possible change on 
            * title
            * summarize
            * type
            * director
            * release_date
            * room
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            example: 9
          required: true
      requestBody:
        description: film to be updated
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/createFilm'
            examples:
              changeTitle:
                summary: change the title
                description: How to change title and what it does
                value: 
                  title: "Rampage"
              changeResume: 
                summary: change the description
                description: How to change summary and what it does
                value:
                  summarize: string
              changeType:
                summary: change the film's type
                description: How to change the type of a film
                value:
                  type: Fantasy
              changeDirector:
                summary: change the manager
                description: How to change the manager and what it does
                value:
                  director : "The Duffer brothers"
              changeDay:
                summary: change time
                description: How to change thr release date and what it does 
                value:
                  release_date: string
              changeRoom:
                summary: change the projection room
                description: How to change the room and what it does
                value: 
                  room: string  
      responses:
        200:
          description: film updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/projection'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    delete:
      tags:
        - Films
      summary: delete a film
      description: Delete a specific delete
      operationId: deleteFilm
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            example: 21
          required: true
      responses:
        200:
          description: film deleted
        400:
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
  /categories/{name}:
    get:
      tags:
        - Categories
      summary: Get all films having the entered category
      description: Return the list of all films having this category
      parameters:
        - name: name
          in: path
          schema: 
            type: string
            example: Thriller
          required: true
      responses:
        200:
          description: List of all films having this category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/projection'
  /categories:
    get:
      tags:
        - Categories
      summary: Get all film Categories
      description: Get the list of all film categories
      responses:
        200:
          description: List of all categories
          content:
            application/json:
              schema:  
                type: array
                items:
                  $ref: '#/components/schemas/categories'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    post:
      tags:
        - Categories
      summary: Add new category
      description: Add new films category
      requestBody:
        description: Add a new category to the list
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                  example: Commedy
      responses:
        200:
          description: Category added to the list 
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
components:
  schemas:
    createFilm:
      description: film
      type: object
      properties:
        title:
          type: string
          example: Red notice
        duration:
          type: string
          format: time
          example: "02:21:45"
        summarize:
          type: string
          example: Dans la jungle aussi profonde que la mer, ...
        type:
          type: string
          example: Thriller
        director:
          type: string
          example: The Duffer Brothers 
        release_date:
          type: string
          format: date
        screening_day:
          type: string
          example: "Sunday"
    projection: 
      allOf:
        - $ref: '#/components/schemas/createFilm'
      type: object
      properties:
        id: 
          type: integer
          example: 9
        room:
          type: string
          example: "A"
    deleteFilm: 
      description: films to be deleted 
      type: object
      properties:
        id:
          type: integer
          example: 13
    room:
      description: cinemas room 
      type: object
      properties:
        id:
          type: string
          example: "A"
        capacity:
          type: integer
          example: 400
    categories:
      description: film categories
      type: object
      properties:
        type:
          type: string
          example: Thriller
    Badrequest:
      properties:
        type: 
          type: string
          example: "BadRequestException"
        message:
          type: string
          example: "Bad request"