openapi: 3.0.1
info:
  title: STD21018 API
  description: 'Global description of my API'
  version: 1.0.0
servers:
 - url: https://STD21018.com
tags: 
 - name: Students
 - name: Courses
paths:
 /students:
    get:
      tags:
        - Students
      operationId: getStudents
      summary: Get all students
      description: Get all students with details
      responses:
        200: 
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    post: 
      tags:
        - Students
      operationId: createStudent
      summary : Create new student
      description: Create new student
      requestBody:
        description: Student to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
        required: true
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: Bad request 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    patch:
      tags:
        - Students
      operationId: Update Student
      summary: Update Student
      description: |
        Possible updates on :
        * name: change
        * address: change
        * birth_date: change
        * phone number: change 
      requestBody:
        description: Student to be Updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudent'
            examples:
              changeName:
                summary: Change name
                description: How to change student's name and what it does
                value: 
                  id: 10
                  name: string
              changeAddress:
                summary: Change address
                description: How to change student's address and what it does
                value: 
                  id: 10
                  address: string
              changeBirthdate:
                summary: Change birthday 
                description: How to change student's birthday and what it does
                value:
                  id: 10
                  birth_date: string
              addPhoneNumber:
                summary: add phone number
                description: Add phone number(s)
                value:
                  id: 10
                  PhoneNumber:
                  - country_code: "+261"
                    phoneNumber: "0324224523"
        required: true
      responses:
        200:
          description: "The created or updated student"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        400:
          description: "Bad request"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Badrequest'
    put:
      tags:
        - Students
      operationId: UpdateStudent
      summary: Created new or Update existing student
      description: Update student when given id, create them otherwise
      requestBody:
        description: Student to be updated or created
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateStudent'
        required: true
      responses:
        200:
          description: Student updated/created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateStudent'
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Badrequest'
 /student/{id}:
    get:
      tags:
        - Students
      operationId: getStudentId
      summary: Get informations about a specific student
      description: Get informations of a specific student
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            example: 2
          required: true
      responses:
        200:
          description : Details of a student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    delete:
      tags:
        - Students
      operationId: deleteStudent
      summary: Delete a student
      description : Delete the student having the entered id
      parameters:
        - name: id
          in : path
          schema:
            type: integer
            example: 2
          required: true
      responses:
        200:
          description: Student deleted successfully
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
 /courses:
    get:
      tags:
        - Courses
      operationId: getCourses
      summary: Get all courses
      description: Get all courses with details
      responses:
        200:
          description: List of courses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Course'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    post:
      tags:
        - Courses
      operationId: CreateCourse
      summary: Create new courses
      description: Create new course
      requestBody:
        description: Course to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourse'
        required: true
      responses:
        200:
          description: List of courses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Course'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    patch:
      tags:
        - Courses
      operationId: Updatecourse
      summary: Update course
      description: Update informations about a course
      requestBody:
        description: Course to be Updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourse'
        required: true
      responses:
        200:
          description: "The created or updated course"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateCourse'
        400:
          description: "Bad request"
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Badrequest'
    put:
      tags:
        - Courses
      operationId: UpdateStudent
      summary: Created new or Update existing course
      description: Update course when given id, create them otherwise
      requestBody:
        description: Course to be updated or created
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UpdateCourse'
        required: true
      responses:
        200:
          description: Student updated/created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateCourse'
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
 /courses/{id}:
    get:
      tags:
        - Courses
      operationId: getCourseId
      summary: Get informations about a specific course
      description: Informations about a course
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            example: 2
          required: true
      responses:
        200:
          description: details about a course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseId'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
    delete:
      tags:
        - Courses
      operationId: deleteCourse
      summary: Delete a course
      description: Delete the course having the entered id
      parameters:
        - name: id
          in: path
          schema:
            type: integer
            example: 2
          required: true
      responses:
        200:
          description: Course deleted successfully
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Badrequest'
components:
  schemas:
    PhoneNumber:
      type: object
      properties:
        country_code: 
          type: string
          example: "261"
        number:
          type: string   
          example: "0322154212"
    CreateStudent:
      type: object
      properties:
        name:
          type: string
          example: "Rakoto"
        birth_date:
          type: string
          format: date
          example: "2022-01-01"
        address:
          type: string
          example: "Ivandry"
    Student:
      allOf:
        - $ref: '#/components/schemas/CreateStudent'
      type: object
      properties:
        id:
          type: integer
          example: 10
        PhoneNumber:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
    StudentId:
      allOf:
        - $ref: '#/components/schemas/CreateStudent'
      type: object
      properties:
        id:
          type: integer
          example: 2
    UpdateStudent:
      properties:
        id:
          type: integer
          example: 10
        name:
          type: string
          example: "new value"
        birth_date:
          type: string
          format: date
    CreateCourse:
      type: object
      properties:
        code: 
          type: string
          example: "PROG1"
        name:
          type: string
          example: "Algorithmique"
        Teacher: 
          type: string
          example: "Rabe"
        Created_Date:
          type: string
          format: date
    Course:
      properties:
        id:
          type: integer
          example: 10
      allOf:
      - $ref: '#/components/schemas/CreateCourse'
    CourseId: 
      allOf:
        - $ref: '#components/schemas/CreateCourse'
      properties:
        id:
          type: integer
          example: 2
    UpdateCourse:
      type: object
      properties:
        code: 
          type: string
          example: "PROG1"
        name:
          type: string
          example: "Algorithmique"
        Teacher: 
          type: string
          example: "Rabe"
        Created_Date:
          type: string
          format: date
      
    Badrequest:
      properties:
        type: 
          type: string
          example: "BadRequestException"
        message:
          type: string
          example: "Bad request"